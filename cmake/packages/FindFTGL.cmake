IF (FTGL_INCLUDE_DIR)
	SET(FTGL_FIND_QUIETLY TRUE)
ENDIF (FTGL_INCLUDE_DIR)


FIND_PATH(FTGL_INCLUDE_DIR NAMES FTGL/ftgl.h
  PATHS
  ${PROJECT_BINARY_DIR}/include
  ${PROJECT_SOURCE_DIR}/include
  ENV CPATH
  /usr/include
  /usr/local/include
  NO_DEFAULT_PATH
)
FIND_PATH(FTGL_INCLUDE_DIR NAMES FTGL/ftgl.h)


FIND_LIBRARY(FTGL_LIBRARIES NAMES ftgl
  PATHS
  ${PROJECT_BINARY_DIR}/lib64
  ${PROJECT_BINARY_DIR}/lib
  ${PROJECT_SOURCE_DIR}/lib64
  ${PROJECT_SOURCE_DIR}/lib
  ENV LD_LIBRARY_PATH
  ENV LIBRARY_PATH
  /usr/lib64
  /usr/lib
  /usr/local/lib64
  /usr/local/lib
  NO_DEFAULT_PATH
)

IF(WIN32)
  FIND_LIBRARY(FTGL_LIBRARIES NAMES ftgl ftgl32)
ELSE(WIN32)
  FIND_LIBRARY(FTGL_LIBRARIES NAMES ftgl)
ENDIF(WIN32)

IF(FTGL_INCLUDE_DIR AND FTGL_LIBRARIES)
   SET(FTGL_FOUND TRUE)
ENDIF(FTGL_INCLUDE_DIR AND FTGL_LIBRARIES)


IF(FTGL_FOUND)
  IF(NOT FTGL_FIND_QUIETLY)
    MESSAGE(STATUS "Found FTGL: ${FTGL_LIBRARIES}")
  ENDIF(NOT FTGL_FIND_QUIETLY)
ELSE(FTGL_FOUND)
  IF(FTGL_FIND_REQUIRED)
    MESSAGE(FATAL_ERROR "Could not find FTGL")
  ENDIF(FTGL_FIND_REQUIRED)
ENDIF(FTGL_FOUND)

MARK_AS_ADVANCED(FTGL_INCLUDE_DIR FTGL_LIBRARIES )
